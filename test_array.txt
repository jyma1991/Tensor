Compile and run: g++ -std=c++14 test_array.cc -o test_array.x -lpthread -lunwind -lgsl -lgslcblas; ./test_array.x

**********
TEST: One dimensional Array

TEST: print array
Array(10): 
   0 1 2 3 4 5 6 7 8 9
  +--------------------+
0 |0 0 0 0 0 0 0 0 0 0 |
  +--------------------+

TEST: Assignment by element
Array(10):
   0 1 2 3 4 5 6 7 8 9
  +--------------------+
0 |0 1 2 3 4 5 6 7 8 9 |
  +--------------------+

TEST: Slice: picking up the ones at 1-3-5...
Array(5):
   0 1 2 3 4
  +----------+
0 |1 3 5 7 9 |
  +----------+

TEST: Slice: operate on the ones at 1-3-5... multiply by -1
Array(10):
   0  1 2  3 4  5 6  7 8  9
  +-------------------------+
0 |0 -1 2 -3 4 -5 6 -7 8 -9 |
  +-------------------------+

TEST: One dimensional Array
Array(10):
   0 1 2 3 4 5 6 7 8 9
  +--------------------+
0 |0 1 2 3 4 5 6 7 8 9 |
  +--------------------+

TEST: operator+=
Array(10):
   0 1 2 3 4  5  6  7  8  9
  +-------------------------+
0 |0 2 4 6 8 10 12 14 16 18 |
  +-------------------------+

TEST: 'map' in place: sin
Array(10):
        0      1       2       3      4       5       6      7       8       9
  +----------------------------------------------------------------------------+
0 |0.0000 0.9093 -0.7568 -0.2794 0.9894 -0.5440 -0.5366 0.9906 -0.2879 -0.7510 |
  +----------------------------------------------------------------------------+

TEST: 'map' in place: floor at zero
Array(10):
        0      1      2      3      4      5      6      7      8      9
  +----------------------------------------------------------------------+
0 |0.0000 0.9093 0.0000 0.0000 0.9894 0.0000 0.0000 0.9906 0.0000 0.0000 |
  +----------------------------------------------------------------------+

TEST: Two dimensional Array

TEST: Print array
Array(10,10):
     0  1  2  3  4  5  6  7  8  9
   +------------------------------+
00 | 0  1  2  3  4  5  6  7  8  9 |
01 |10 11 12 13 14 15 16 17 18 19 |
02 |20 21 22 23 24 25 26 27 28 29 |
03 |30 31 32 33 34 35 36 37 38 39 |
04 |40 41 42 43 44 45 46 47 48 49 |
05 |50 51 52 53 54 55 56 57 58 59 |
06 |60 61 62 63 64 65 66 67 68 69 |
07 |70 71 72 73 74 75 76 77 78 79 |
08 |80 81 82 83 84 85 86 87 88 89 |
09 |90 91 92 93 94 95 96 97 98 99 |
   +------------------------------+

TEST: Slice: elements at 1-1 1-3 1-5 ... 3-1 3-3 3-5 ...
Array(5,5):
    0  1  2  3  4
  +---------------+
0 |11 13 15 17 19 |
1 |31 33 35 37 39 |
2 |51 53 55 57 59 |
3 |71 73 75 77 79 |
4 |91 93 95 97 99 |
  +---------------+

TEST: Three dimensional Array

TEST: Print array
Array(2,3,5):
[0]:
    0  1  2  3  4
  +---------------+
0 | 0  1  2  3  4 |
1 | 5  6  7  8  9 |
2 |10 11 12 13 14 |
  +---------------+
[1]:
    0  1  2  3  4
  +---------------+
0 |15 16 17 18 19 |
1 |20 21 22 23 24 |
2 |25 26 27 28 29 |
  +---------------+

TEST: Sum of array
     0: A.sum()=435, 435.0=435
     1: A.sum([](double x) -> double { return x; })=435, 435.0=435

TEST: Reshape array
Array(5,6):
    0  1  2  3  4  5
  +------------------+
0 | 0  1  2  3  4  5 |
1 | 6  7  8  9 10 11 |
2 |12 13 14 15 16 17 |
3 |18 19 20 21 22 23 |
4 |24 25 26 27 28 29 |
  +------------------+

TEST: Reshape array back
Array(2,3,5):
[0]:
    0  1  2  3  4
  +---------------+
0 | 0  1  2  3  4 |
1 | 5  6  7  8  9 |
2 |10 11 12 13 14 |
  +---------------+
[1]:
    0  1  2  3  4
  +---------------+
0 |15 16 17 18 19 |
1 |20 21 22 23 24 |
2 |25 26 27 28 29 |
  +---------------+
